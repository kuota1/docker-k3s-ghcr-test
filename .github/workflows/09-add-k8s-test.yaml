on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/kuota1/miapp:latest
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Create K3d Cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster-1"
          args: >
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik@server:0"

      - name: Wait for K3s API
        run: |
          echo "Esperando que K3s esté disponible..."
          for i in {1..10}; do 
            if kubectl get nodes > /dev/null 2>&1; then 
              echo "K3s está listo"
              break
            fi 
            echo "⏳ Esperando... intento $i"
            sleep 5
          done


      - name: Deploy app using kubectl
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GHCR_PAT }}

          export TESTING_IMAGE=ghcr.io/kuota1/miapp:latest
          envsubst < manifests/deployment.yaml | kubectl apply -f -

      - name: Wait for rollout
        run: kubectl rollout status deployment myapp

      - name: Smoke Test
        run: kubectl exec deploy/myapp -- curl --fail localhost

      - name: Debug Deployment
        if: always()
        run: |
          echo "--- POD STATUS ---"
          kubectl get pods -o wide
          echo "--- POD DESCRIPTION ---"
          kubectl describe pods -l app=myapp
          echo "--- CONTAINER LOGS ---"
          kubectl logs -l app=myapp